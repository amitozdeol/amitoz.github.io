!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([,function(module,exports){eval('function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\ngetdata();\n\nfunction getdata() {\n  return _getdata.apply(this, arguments);\n} // axios.get(\'https://erikberg.com/mlb/standings.json\')\n//   .then(function (response) {\n//     // handle success\n//     console.log(response);\n//   })\n// Create a request variable and assign a new XMLHttpRequest object to it.\n// var request = new XMLHttpRequest()\n// // Open a new connection, using the GET request on the URL endpoint\n// request.open(\'GET\', \'https://ghibliapi.herokuapp.com/films\', true)\n// request.onload = function () {\n//   // Begin accessing JSON data here\n//   console.log(this.response);\n// }\n// // Send request\n// request.send()\n//Width and height\n\n\nfunction _getdata() {\n  _getdata = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var response, myJson;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\'https://jonsvillagetaxi.com/test.json\', {\n              mode: \'cors\',\n              credentials: "same-origin",\n              headers: {\n                \'Access-Control-Allow-Origin\': \'*\',\n                \'Content-Type\': \'application/json\',\n                \'Accept\': \'application/json\' // \'Content-Type\': \'application/x-www-form-urlencoded\',\n\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            myJson = _context.sent;\n            console.log(myJson);\n\n          case 7:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getdata.apply(this, arguments);\n}\n\nvar w = 800;\nvar h = 600; //Define map projectionb\n\nvar projection = d3.geo.mercator() //utiliser une projection standard pour aplatir les p√¥les, voir D3 projection plugin\n.center([13, 52]) //comment centrer la carte, longitude, latitude\n.translate([w / 2, h / 2]) // centrer l\'image obtenue dans le svg\n.scale([w / 1.5]); // zoom, plus la valeur est petit plus le zoom est gros\n//Define path generator\n\nvar path = d3.geo.path().projection(projection); //Create SVG\n\nvar svg = d3.select("#container").append("svg").attr("width", w).attr("height", h);\nvar tooltip = d3.select("body").append("div").style("position", "absolute").style("z-index", "10").style("visibility", "hidden").text(""); //Load in GeoJSON data\n\nd3.json("assets/map.json", function (json) {\n  console.log(json.features[10].properties.name); //Bind data and create one path per GeoJSON feature\n\n  svg.selectAll("path").data(json.features).enter().append("path").attr("d", path).attr("stroke", "rgba(8, 81, 156, 0.2)").attr("fill", "rgba(8, 81, 156, 0.6)").on("mouseover", function (d) {\n    return tooltip.style("visibility", "visible").text(d.properties.name);\n  }).on("mousemove", function () {\n    return tooltip.style("top", event.pageY - 10 + "px").style("left", event.pageX + 10 + "px");\n  }).on("mouseout", function () {\n    return tooltip.style("visibility", "hidden");\n  });\n});\n\n//# sourceURL=webpack:///./js/map.js?')}]);